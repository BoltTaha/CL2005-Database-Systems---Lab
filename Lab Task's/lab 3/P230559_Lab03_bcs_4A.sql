--23P-0559 BCS(4a)
-- (1) Select queries with LIKE operator
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '%A%' OR LAST_NAME LIKE '%A';
SELECT * FROM EMPLOYEES WHERE LAST_NAME LIKE '%e_';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_l%';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_l%' AND FIRST_NAME LIKE '___n%';

-- (2) Creating a user and granting privileges
CREATE USER P230559_Lab03 IDENTIFIED BY abc123;
GRANT ALL PRIVILEGES TO P230559_Lab03;

-- (3) Creating Employees table
CREATE TABLE Employees (
    Employee_id INT,
    Full_Name VARCHAR(100),
    Salary INT,
    Department_id INT,
    Start_Date DATE,
    End_Date DATE,
    Married VARCHAR(3),
    Phone_No VARCHAR(11)
);

-- (4) Creating Departments table
CREATE TABLE Departments (
    Department_id INT,
    Department_name VARCHAR(20),
    Department_code VARCHAR(10),
    Date_Founded DATE
);

-- (5) Adding constraints to Departments table
ALTER TABLE DEPARTMENTS 
ADD CONSTRAINT UNIQUE_DEP_NAME UNIQUE (DEPARTMENT_NAME),
ADD CONSTRAINT CHECK_DATE_FOUNDED CHECK (DATE_FOUNDED > TO_DATE('2000-01-01', 'YYYY-MM-DD'));

-- (6) Adding primary key to Departments table
ALTER TABLE DEPARTMENTS ADD CONSTRAINT PRIM_KEY PRIMARY KEY(Department_ID);

-- (7) Adding foreign key to Employees table
ALTER TABLE EMPLOYEES ADD CONSTRAINT FOREIGN_KEY FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID);

-- (8) Inserting data into Departments and Employees tables
INSERT INTO DEPARTMENTS (DEPARTMENT_ID, DEPARTMENT_NAME, DEPARTMENT_CODE, DATE_FOUNDED)
VALUES (105, 'Support', 930, TO_DATE('2001-01-20', 'YYYY-MM-DD'));

INSERT INTO EMPLOYEES (EMPLOYEE_ID, DEPARTMENT_ID, FULL_NAME, SALARY, START_DATE, END_DATE, MARRIED, PHONE_NO)
VALUES (5, 105, 'Muhammad Hafeez', 78000, TO_DATE('2005-03-01', 'YYYY-MM-DD'), NULL, 'yes', '3171000003');

-- (9) Altering Departments table to add a new column
ALTER TABLE DEPARTMENTS ADD SPECIALITY VARCHAR(30) DEFAULT 'None';

-- (10) Creating Jobs table
CREATE TABLE Jobs (
    Job_ID INT,
    Job_Title VARCHAR(40),
    Min_Salary INT,
    Max_Salary INT
);

-- (11) Adding primary key to Jobs table
ALTER TABLE JOBS MODIFY JOB_ID INT NOT NULL;
ALTER TABLE JOBS ADD CONSTRAINT JOB_ID_PRI PRIMARY KEY (JOB_ID);

-- (12) Modifying Employees table and adding foreign key to Jobs table
ALTER TABLE EMPLOYEES MODIFY EMPLOYEE_ID INT NOT NULL;
ALTER TABLE EMPLOYEES ADD CONSTRAINT PK_EMP_ID PRIMARY KEY (EMPLOYEE_ID);

ALTER TABLE JOBS ADD EMPLOYEE_ID INT;
ALTER TABLE JOBS ADD CONSTRAINT FOREIGN_KEY_IN_JOBS FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID);

-- (13) Inserting data into Jobs table
INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY, EMPLOYEE_ID)
VALUES (3, 'MANAGER', 500, 500000, 2);

-- (14) Dropping a column from Departments table
ALTER TABLE DEPARTMENTS DROP COLUMN SPECIALITY;

-- (15) Truncating Jobs table
TRUNCATE TABLE JOBS;

-- (16) Inserting data into Jobs table
INSERT INTO JOBS (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY, EMPLOYEE_ID)
VALUES (4, 'Finance Manager', 8200, 160000, 5);

-- (17) Updating Employees full name to uppercase and adding constraint
UPDATE EMPLOYEES SET FULL_NAME = UPPER(FULL_NAME);
ALTER TABLE EMPLOYEES ADD CONSTRAINT CHECK_FULL_NAME CHECK (FULL_NAME = UPPER(FULL_NAME));

-- (18) Modifying Employees table for phone number constraint
ALTER TABLE EMPLOYEES MODIFY PHONE_NO UNIQUE NOT NULL;

-- (19) Inserting data into Employees table
INSERT INTO EMPLOYEES (EMPLOYEE_ID, FULL_NAME, SALARY, DEPARTMENT_ID, START_DATE, END_DATE, MARRIED, PHONE_NO)
VALUES (6, 'ABDULLAH', 90000, 105, TO_DATE('2020-11-18', 'YYYY-MM-DD'), NULL, 'NO', 3000000);

-- (20) Updating salary where condition matches
UPDATE EMPLOYEES SET SALARY = SALARY * 3 WHERE SALARY < 1000;

-- (21) Altering Employees and Jobs tables, renaming Jobs table
ALTER TABLE EMPLOYEES RENAME COLUMN PHONE_NO TO PHONE_NUMBER;
ALTER TABLE JOBS DROP CONSTRAINT FOREIGN_KEY_IN_JOBS;
RENAME JOBS TO JOB_DETAILS;
ALTER TABLE JOB_DETAILS ADD CONSTRAINT FOREIGN_KEY_IN_JOBS_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID);

-- (22) Attempt to add composite primary key (fails due to missing column)
ALTER TABLE EMPLOYEES ADD CONSTRAINT COMPOSITE_PRIM_KEY PRIMARY KEY(EMPLOYEE_ID, JOB_ID);

-- (23) Updating and deleting records in Job_Details table
ALTER TABLE JOB_DETAILS ADD STARTING_YEAR INT;
UPDATE JOB_DETAILS SET STARTING_YEAR = 1889 WHERE JOB_ID = 3;
DELETE FROM JOB_DETAILS WHERE STARTING_YEAR < 1900;

-- (24) Dropping Job_Details table
DROP TABLE JOB_DETAILS;

-- (25) Creating indexes
CREATE INDEX indx_employee_id ON EMPLOYEES(EMPLOYEE_ID);
CREATE INDEX indx_department_id ON EMPLOYEES(DEPARTMENT_ID);

-- (26) Creating Suppliers table and modifying email column
CREATE TABLE Suppliers (
    Supplier_ID INT NOT NULL PRIMARY KEY,
    Supplier_Name VARCHAR(25) NOT NULL UNIQUE,
    Contact_Name VARCHAR(25),
    Phone_Number INT NOT NULL,
    Email INT UNIQUE
);
ALTER TABLE SUPPLIERS MODIFY EMAIL VARCHAR(20);

-- (27) Creating Products table with foreign keys
CREATE TABLE PRODUCTS (
    PRODUCT_ID INT NOT NULL,
    Product_Name VARCHAR(25) NOT NULL UNIQUE,
    Supplier_ID INT,
    Category_ID INT,
    CONSTRAINT FOREIGN_KEY_Supplier_ID FOREIGN KEY (Supplier_ID) REFERENCES SUPPLIERS(Supplier_ID),
    CONSTRAINT PRIMARY_KEY_PID PRIMARY KEY (PRODUCT_ID)
);

-- (28) Inserting data into Suppliers and Products tables
INSERT INTO SUPPLIERS (SUPPLIER_ID, SUPPLIER_NAME, CONTACT_NAME, PHONE_NUMBER, EMAIL)
VALUES (5, 'COMPANY B', 'MUHAMMAD USMAN', 32014451, 'DUMMY4GMAILCOM');

INSERT INTO PRODUCTS (PRODUCT_ID, PRODUCT_NAME, SUPPLIER_ID, CATEGORY_ID)
VALUES (5, 'ELECTRONICS', 3, 4);
